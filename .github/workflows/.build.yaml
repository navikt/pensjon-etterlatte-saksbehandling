name: .build.yaml

on:
  workflow_call:
    outputs:
      image:
        description: "Docker image url"
        value: ${{ jobs.build.outputs.image }}

jobs:
  build:
    name: Build & publish
    runs-on: ubuntu-latest-8-cores
    timeout-minutes: 10
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Validate licenses
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew checkLicense
      - name: Gradle test and build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew :apps:${{ github.workflow }}:build

      - name: Build and publish docker image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: etterlatte
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          dockerfile: docker/Dockerfile
          docker_context: apps/${{ github.workflow }}/
          image_suffix: ${{ github.workflow }}
          tag: ${{ env.GITHUB_REF_SLUG }}
      - name: Print docker tag
        run: echo 'Docker-tag er ${{ steps.docker-build-push.outputs.image }} ' >> $GITHUB_STEP_SUMMARY
  deploy-to-dev-gcp:
    name: dev-gcp
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: apps/${{ github.workflow }}/.nais/dev.yaml
          VAR: image=${{ needs.build.outputs.image }}

  deploy-to-prod-gcp:
    name: prod-gcp
    if: ${{ github.ref == 'refs/heads/main' || github.event.inputs.deploy-prod == 'true' }}
    needs: [build, deploy-to-dev-gcp]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: andstor/file-existence-action@v3
        id: check_files
        with:
          files: "apps/${{ github.workflow }}/.nais/prod.yaml"
      - uses: nais/deploy/actions/deploy@v2
        if: steps.check_files.outputs.files_exists == 'true'
        env:
          CLUSTER: prod-gcp
          RESOURCE: apps/${{ github.workflow }}/.nais/prod.yaml
          VAR: image=${{ needs.build.outputs.image }}