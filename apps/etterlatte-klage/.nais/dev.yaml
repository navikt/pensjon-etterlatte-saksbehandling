apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: etterlatte-klage
  namespace: etterlatte
  labels:
    team: etterlatte
spec:
  image: "{{image}}"
  port: 8080
  ingresses:
    - "https://etterlatte-klage.intern.dev.nav.no"
  liveness:
    initialDelay: 5
    path: /health/isalive
  readiness:
    initialDelay: 5
    path: /health/isready
  strategy:
    type: Recreate
  secureLogs:
    enabled: true
  kafka:
    pool: nav-dev
  azure:
    application:
      enabled: true
  observability:
    autoInstrumentation:
      enabled: true
      runtime: java
    logging:
      destinations:
        - id: elastic
        - id: loki
  resources:
    requests:
      cpu: 10m
      memory: 256Mi
  replicas:
    scalingStrategy:
      cpu:
        thresholdPercentage: 90
    max: 1
    min: 1
  env:
    - name: KAFKA_RESET_POLICY
      value: earliest
    - name: KLAGE_GROUP_ID
      value: "etterlatte-v1"
    - name: KLAGE_TOPIC
      value: "klage.behandling-events.v1"
    - name: KABAL_URL
      value: http://kabal-api.klage
    - name: KABAL_AZURE_SCOPE
      value: api://dev-gcp.klage.kabal-api/.default
    - name: BEHANDLING_AZURE_SCOPE
      value: api://dev-gcp.etterlatte.etterlatte-behandling/.default
    - name: ETTERLATTE_BEHANDLING_URL
      value: http://etterlatte-behandling
  envFrom:
    - secret: my-application-unleash-api-token
  accessPolicy:
    outbound:
      rules:
        - application: etterlatte-behandling
        - application: kabal-api
          namespace: klage
          cluster: dev-gcp

      external:
        - host: etterlatte-unleash-api.nav.cloud.nais.io

    inbound:
      rules:
        - application: etterlatte-behandling
        - application: azure-token-generator # https://docs.nais.io/security/auth/azure-ad/usage/#token-generator
          namespace: aura
          cluster: dev-gcp
