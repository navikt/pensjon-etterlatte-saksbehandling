apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
  name: etterlatte-tilbakekreving
  namespace: etterlatte
  labels:
    team: etterlatte
spec:
  image: {{image}}
  port: 8080
  liveness:
    initialDelay: 5
    path: /health/isalive
  readiness:
    initialDelay: 5
    path: /health/isready
  prometheus:
    enabled: true
    path: /metrics
  secureLogs:
    enabled: true
  gcp:
    sqlInstances:
      - type: POSTGRES_14
        name: etterlatte-tilbakekreving
        cascadingDelete: true
        databases:
          - name: tilbakekreving
            envVarPrefix: DB
  azure:
    application:
      enabled: true
  envFrom:
    - secret: etterlatte-secrets
    - secret: my-application-unleash-api-token
  replicas:
    cpuThresholdPercentage: 90
    max: 1
    min: 1
  env:
    - name: KRAVGRUNNLAG_MQ_NAME
      value: QA.Q1_ETTERLATTE.KRAVGRUNNLAG
    - name: MQ_HOSTNAME
      value: b27apvl222.preprod.local
    - name: MQ_PORT
      value: "1413"
    - name: MQ_CHANNEL
      value: Q1_ETTERLATTE
    - name: MQ_MANAGER
      value: MQLS04
    - name: ETTERLATTE_BEHANDLING_URL
      value: http://etterlatte-behandling
    - name: ETTERLATTE_BEHANDLING_SCOPE
      value: api://dev-gcp.etterlatte.etterlatte-behandling/.default
    - name: ETTERLATTE_PROXY_URL
      value: https://etterlatte-proxy.dev-fss-pub.nais.io/aad
    - name: ETTERLATTE_PROXY_SCOPE
      value: api://dev-fss.etterlatte.etterlatte-proxy/.default
  accessPolicy:
    outbound:
      rules:
        - application: etterlatte-behandling
      external:
        - host: b27apvl222.preprod.local
          ports:
            - name: mq
              port: 1413
              protocol: TCP
        - host: etterlatte-unleash-api.nav.cloud.nais.io
        - host: etterlatte-proxy.dev-fss-pub.nais.io
